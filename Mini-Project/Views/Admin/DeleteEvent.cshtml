@{
    ViewData["Title"] = "Delete Events";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="left-header2">
    <h2>Delete an Event</h2>
    <div>
        <ul id="eventList">
            <!-- Events will be listed here -->
        </ul>
    </div>
</div>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/11.3.0/firebase-app.js";
    import { getFirestore, collection, deleteDoc, getDocs } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-firestore.js";
    import { getStorage, deleteObject, ref } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-storage.js";

    // Firebase config
    const firebaseConfig = {
      apiKey: "AIzaSyCSXynlYk7r4OS5dD7PmsUgYCzi2urRr5s",
      authDomain: "w-mini-project.firebaseapp.com",
      projectId: "w-mini-project",
      storageBucket: "w-mini-project.firebasestorage.app",
      messagingSenderId: "687935156042",
      appId: "1:687935156042:web:b91329905440ce3f5b5bb3",
      measurementId: "G-B657WCTBT3"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    // Fetch events from Firestore
    async function fetchEvents() {
        const eventList = document.getElementById('eventList');
        eventList.innerHTML = '';

        const eventsSnapshot = await getDocs(collection(db, 'events'));
        eventsSnapshot.forEach((doc) => {
            const eventData = doc.data();
            const eventItem = document.createElement('li');

            eventItem.innerHTML = `
                <span class="event-name">${eventData.EventName}</span> -
                <span class="event-location">${eventData.Location}</span>
            `;
            eventList.appendChild(eventItem);
        });
    }



    // Delete event and image from Firestore and Firebase Storage
    async function deleteEvent(docId, imageUrl) {
        try {
            // Delete image from Storage
            const imageRef = ref(storage, imageUrl);
            await deleteObject(imageRef);

            // Delete event from Firestore
            await deleteDoc(doc(db, 'events', docId));
            alert('Event deleted successfully!');
            fetchEvents();
        } catch (error) {
            console.error('Error deleting event:', error);
            alert('Error deleting event: ' + error.message);
        }
    }

    document.getElementById('eventList').addEventListener('click', function (event) {
        if (event.target.classList.contains('delete-icon')) {
            const docId = event.target.getAttribute('data-id');
            const imageUrl = event.target.getAttribute('data-image-url');

            if (confirm('Are you sure you want to delete this event?')) {
                deleteEvent(docId, imageUrl);
            }
        }
    });

    // Fetch the events when the page loads
    fetchEvents();
</script>
