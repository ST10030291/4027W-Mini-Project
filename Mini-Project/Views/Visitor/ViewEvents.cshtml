@model List<Mini_Project.Models.Event>

@{
    var googleMapsApiKey = "AIzaSyAHBtfUvui9Re6Hzlxc6j7Fx-UnjPyy3IE";
    var weatherApiKey = "80a1998ebcc9b06405bfad0d711413c6";
}
<script type="module" src="https://ajax.googleapis.com/ajax/libs/@googleMapsApiKey/extended-component-library/0.6.11/index.min.js">
</script>
<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @ViewData["ErrorMessage"]
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<h2 class="page-title">All Events</h2>

@if (Model != null && Model.Any())
{
    <div class="event-list">
        @foreach (var eventItem in Model)
        {
            var formattedStartDate = eventItem.StartTime.ToString("yyyy-MM-dd"); 
            var encodedLocation = Uri.EscapeDataString(eventItem.Location); 

            <div class="event-card">
                <h3 class="event-title">🎟️ @eventItem.EventName</h3>
                <p class="event-description">@eventItem.Description</p>
                <p class="event-location">📍 Location: @eventItem.Location</p>
                <p class="event-dates">📅 Start: @eventItem.StartTime.ToString("g")</p>
                <p class="event-dates">📅 End: @eventItem.EndTime.ToString("g")</p>

                <!-- Google Map -->
                <iframe class="event-map"
                        width="100%" height="250" style="border:0"
                        loading="lazy"
                        allowfullscreen
                        src="https://www.google.com/maps/embed/v1/place?q=@encodedLocation&key=@googleMapsApiKey">
                </iframe>

                <div class="form-container">
                    <!-- RSVP Button -->
                    <div class="rsvp-form">
                        <a asp-controller="Visitor" asp-action="RSVP" asp-route-eventId="@eventItem.Id">
                            <button type="submit" class="btn">RSVP</button>
                        </a>
                    </div>

                    <!-- Rate Event Button -->
                    <div class="rating-form">
                        <a asp-controller="Visitor" asp-action="Rate">
                            <button type="submit" class="btn">Rate Event</button>
                        </a>
                    </div>

                    <!-- Comment Button -->
                    <div class="comment-form">
                        <a asp-controller="Visitor" asp-action="Comment">
                            <button type="submit" class="btn">Comment</button>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No events available :(</p>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch("https://api.openweathermap.org/data/2.5/weather?q=Cape%20Town,za&units=metric&appid=ecf8a040e5d45d1eaed66a0dad268ef3")
            .then(response => response.json())
            .then(data => {
                if (!data || !data.main) {
                    document.getElementById("weather-info").innerHTML = "<p>⚠️ Weather data not found.</p>";
                    return;
                }
                document.getElementById("weather-info").innerHTML = `
                    <p>Temperature: 🌡️ ${data.main.temp}°C</p>
                    <p>Humidity: 💧 ${data.main.humidity}%</p>
                    <p>Condition: ${data.weather[0].main} (${data.weather[0].description})</p>
                    <p>Wind Speed: 🌬️ ${data.wind.speed} m/s</p>
                `;
            })
            .catch(error => {
                document.getElementById("weather-info").innerHTML = "<p>⚠️ Unable to load weather data.</p>";
                console.error("Weather API error:", error);
            });
    });

        async function init() {
      await customElements.whenDefined('gmp-map');

      const map = document.querySelector('gmp-map');
      const marker = document.querySelector('gmp-advanced-marker');
      const placePicker = document.querySelector('gmpx-place-picker');
      const infowindow = new google.maps.InfoWindow();

      map.innerMap.setOptions({
        mapTypeControl: false
      });

      placePicker.addEventListener('gmpx-placechange', () => {
        const place = placePicker.value;

        if (!place.location) {
          window.alert(
            "No details available for input: '" + place.name + "'"
          );
          infowindow.close();
          marker.position = null;
          return;
        }

        if (place.viewport) {
          map.innerMap.fitBounds(place.viewport);
        } else {
          map.center = place.location;
          map.zoom = 17;
        }

        marker.position = place.location;
        infowindow.setContent(
          `<strong>${place.displayName}</strong><br>
           <span>${place.formattedAddress}</span>
        `);
        infowindow.open(map.innerMap, marker);
      });
    }

    document.addEventListener('DOMContentLoaded', init);
</script>

<style>
    /* General Styles */
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f7f7f7;
        color: #333;
    }

    .page-title {
        text-align: center;
        font-size: 2.5rem;
        margin: 20px 0;
    }

    .event-list {
        border-radius:25px;
        background-color:lightgray;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .event-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        padding: 20px;
        transition: transform 0.3s ease-in-out;
    }

        .event-card:hover {
            transform: translateY(-5px);
        }

    .event-title {
        font-size: 1.8rem;
        color: #007BFF;
        margin-bottom: 10px;
    }

    .event-description {
        font-size: 1rem;
        margin-bottom: 10px;
        color: #555;
    }

    .event-location, .event-dates {
        font-size: 0.9rem;
        color: #777;
        margin-bottom: 10px;
    }

    .event-map {
        width: 100%;
        height: 200px;
        margin-bottom: 20px;
        border-radius: 5px;
    }

    .event-weather {
        font-size: 1rem;
        margin-bottom: 20px;
        color: #555;
    }

    .form-container {
        margin-top: 20px;
    }

    .rsvp-form, .rating-form, .comment-form {
        margin-bottom: 20px;
    }

    .btn {
        background-color: #007BFF;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        display: inline-block;
        width: 100%;
    }

        .btn:hover {
            background-color: #0056b3;
        }

    /* Container for Map & Weather */
    .venue-weather-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        align-items: flex-start;
        padding: 20px;
    }

    /* Google Maps Container */
    .map-container {
        flex: 1;
        min-width: 300px;
        max-width: 600px;
        height: 400px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    /* Weather Card */
    .weather-card {
        flex: 1;
        min-width: 280px;
        max-width: 400px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        text-align: center;
    }

        .weather-card h3 {
            font-size: 1.5rem;
            color: #007BFF;
            margin-bottom: 10px;
        }

        .weather-card p {
            font-size: 1.1rem;
            color: #555;
            margin: 5px 0;
        }

    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    .place-picker-container {
        padding: 20px;
    }
</style>
